name: Build Testing Container Package

on:
  workflow_dispatch:
  pull_request:
  push:
    paths:
    - '!.github/**'

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - 20.11.9
          - 21.08.8-2
          - 22.05.5

    env:
      base_tag:     ghcr.io/eth-cscs/slurm-container-${{ matrix.version }}:latest
      cache_tag:    ghcr.io/eth-cscs/cache_docker/slurm-uenv-mount-tester-${{ matrix.version }}:latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build tester image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ci/Dockerfile
        push: true
        tags: ${{ env.cache_tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args:
          DOCKER_CONTAINER=${{ env.base_tag }}

  build-and-test:
    needs: build-test-image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version:
          - 20.11.9
          - 21.08.8-2
          - 22.05.5

    container:
      image: ghcr.io/eth-cscs/cache_docker/slurm-uenv-mount-tester-${{ matrix.version }}:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      env:
        NODE_HW: CPUS=2
      options: --cpus 2 --privileged

    steps:
      - uses: actions/checkout@v3
      - run:
          make install
      - run:
          echo "required /usr/lib64/libslurm-uenv-mount.so" > /etc/slurm/plugstack.conf
      - run: |
          # initialization
          /entrypoint.sh
          sinfo
          ci/create-dummy-sqfs.sh
      - run: |
          # verify that nothing is mounted when no --uenv-file flag is given
          su testuser -c sh <<\EOF
          sbatch --wait ci/tests/plain.sbatch || exit 1
          EOF
      - run: |
          # run sbatch with --uenv-mount/file flags and verify image is mounted as expected
          su testuser -c sh <<\EOF
          sbatch --wait ci/tests/test.sbatch || exit 1
          EOF
      - run: |
          # imitate squashfs-run session
          su testuser -c sh <<\EOF
          ci/tests/squashfs-run.sh
          EOF
      - run: |
          # override --uenv-file/mount flags from sbatch in subsequent srun commands
          su testuser -c sh <<\EOF
          sbatch --wait ci/tests/test-override-flags.sbatch || exit 1
          EOF
      - run: |
          # verify that attempting to mount an non-existent image fails
          su testuser -c sh <<\EOF
          ci/tests/invalid-image.sh
          EOF
      - run: |
          # verify attempting to mount under an non-existent path fails
          su testuser -c -m sh <<\EOF
          ci/tests/invalid-file.sh
          EOF
      - run: |
          # --uenv-mount=.... without --uenv-mount-file must return an error
          su testuser -c -m sh <<\EOF
          # this is expected to vail
          ci/tests/invalid-flags.sh
          EOF
